"use strict";function CGoogleSettingsFormView(){CAbstractSettingsFormView.call(this,Settings.ServerModuleName),this.connected=ko.observable(Settings.Connected),this.scopes=ko.observable(Settings.getScopesCopy()),this.bRunCallback=!1,window.googleConnectCallback=_.bind(function(e,t,o){this.bRunCallback=!0,e?(this.connected(!0),this.updateSavedState(),Settings.updateScopes(this.connected(),this.scopes())):Api.showErrorByCode({ErrorCode:Types.pInt(t),Module:o},"",!0)},this)}var _=require("underscore"),$=require("jquery"),ko=require("knockout"),Types=require("%PathToCoreWebclientModule%/js/utils/Types.js"),UrlUtils=require("%PathToCoreWebclientModule%/js/utils/Url.js"),Ajax=require("%PathToCoreWebclientModule%/js/Ajax.js"),Api=require("%PathToCoreWebclientModule%/js/Api.js"),App=require("%PathToCoreWebclientModule%/js/App.js"),ModulesManager=require("%PathToCoreWebclientModule%/js/ModulesManager.js"),WindowOpener=require("%PathToCoreWebclientModule%/js/WindowOpener.js"),CAbstractSettingsFormView=ModulesManager.run("SettingsWebclient","getAbstractSettingsFormViewClass"),Settings=require("modules/%ModuleName%/js/Settings.js");_.extendOwn(CGoogleSettingsFormView.prototype,CAbstractSettingsFormView.prototype),CGoogleSettingsFormView.prototype.ViewTemplate="%ModuleName%_GoogleSettingsFormView",CGoogleSettingsFormView.prototype.getCurrentValues=function(){var e=_.map(this.scopes(),function(e){return e.Name+e.Value()});return[this.connected(),e]},CGoogleSettingsFormView.prototype.revertGlobalValues=function(){this.connected(Settings.Connected),this.scopes(Settings.getScopesCopy())},CGoogleSettingsFormView.prototype.checkAndConnect=function(){var e={Scopes:[],Service:"google",AllowConnect:!0},t=_.find(this.scopes(),function(e){return"auth"===e.Name}),o=!!t&&!!t.Value(),n=_.find(Settings.getScopesCopy(),function(e){return"auth"===e.Name}),s=!!n&&!!n.Value();_.each(this.scopes(),function(t){t.Value()&&e.Scopes.push(t.Name)}),App.broadcastEvent("OAuthAccountChange::before",e),e.AllowConnect&&(o||o===s||!o&&App.isAccountDeletingAvailable())&&this.connect(e.Scopes)},CGoogleSettingsFormView.prototype.connect=function(e){$.removeCookie("oauth-scopes"),$.cookie("oauth-scopes",e.join("|")),$.cookie("oauth-redirect","connect"),this.bRunCallback=!1;var t=WindowOpener.open(UrlUtils.getAppPath()+"?oauth=google","Google"),o=setInterval(_.bind(function(){t.closed&&(this.bRunCallback?(clearInterval(o),App.broadcastEvent("OAuthAccountChange::after"),this.updateSavedState(),Settings.updateScopes(this.connected(),this.scopes())):window.location.reload())},this),1e3)},CGoogleSettingsFormView.prototype.checkAndDisconnect=function(){var e={Service:"google",AllowDisconnect:!0},t=_.find(Settings.getScopesCopy(),function(e){return"auth"===e.Name}),o=!!t&&!!t.Value();App.broadcastEvent("OAuthAccountChange::before",e),!e.AllowDisconnect||o&&!App.isAccountDeletingAvailable()||this.disconnect()},CGoogleSettingsFormView.prototype.disconnect=function(){Ajax.send(Settings.ServerModuleName,"DeleteAccount",null,function(e){e.Result?(this.connected(!1),_.each(this.scopes(),function(e){e.Value(!1)}),App.broadcastEvent("OAuthAccountChange::after"),this.updateSavedState(),Settings.updateScopes(this.connected(),this.scopes())):Api.showErrorByCode(e,"",!0)},this)},module.exports=new CGoogleSettingsFormView;