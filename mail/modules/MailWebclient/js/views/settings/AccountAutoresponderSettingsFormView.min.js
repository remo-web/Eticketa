"use strict";function CAccountAutoresponderSettingsFormView(){CAbstractSettingsFormView.call(this,Settings.ServerModuleName),this.enable=ko.observable(!1),this.subject=ko.observable(""),this.message=ko.observable(""),AccountList.editedId.subscribe(function(){this.bShown&&this.populate()},this)}var _=require("underscore"),ko=require("knockout"),TextUtils=require("%PathToCoreWebclientModule%/js/utils/Text.js"),Types=require("%PathToCoreWebclientModule%/js/utils/Types.js"),Api=require("%PathToCoreWebclientModule%/js/Api.js"),ModulesManager=require("%PathToCoreWebclientModule%/js/ModulesManager.js"),Screens=require("%PathToCoreWebclientModule%/js/Screens.js"),CAbstractSettingsFormView=ModulesManager.run("SettingsWebclient","getAbstractSettingsFormViewClass"),AccountList=require("modules/%ModuleName%/js/AccountList.js"),Ajax=require("modules/%ModuleName%/js/Ajax.js"),Settings=require("modules/%ModuleName%/js/Settings.js"),CAutoresponderModel=require("modules/%ModuleName%/js/models/CAutoresponderModel.js");_.extendOwn(CAccountAutoresponderSettingsFormView.prototype,CAbstractSettingsFormView.prototype),CAccountAutoresponderSettingsFormView.prototype.ViewTemplate="%ModuleName%_Settings_AccountAutoresponderSettingsFormView",CAccountAutoresponderSettingsFormView.prototype.getCurrentValues=function(){return[this.enable(),this.subject(),this.message()]},CAccountAutoresponderSettingsFormView.prototype.onShow=function(){this.populate()},CAccountAutoresponderSettingsFormView.prototype.revert=function(){this.populate()},CAccountAutoresponderSettingsFormView.prototype.getParametersForSave=function(){return{AccountID:AccountList.editedId(),Enable:this.enable(),Subject:this.subject(),Message:this.message()}},CAccountAutoresponderSettingsFormView.prototype.applySavedValues=function(e){var t=AccountList.getEdited().autoresponder();t&&(t.enable=e.Enable,t.subject=e.Subject,t.message=e.Message)},CAccountAutoresponderSettingsFormView.prototype.save=function(){this.isSaving(!0),this.updateSavedState(),Ajax.send("UpdateAutoresponder",this.getParametersForSave(),this.onResponse,this)},CAccountAutoresponderSettingsFormView.prototype.onResponse=function(e,t){if(this.isSaving(!1),!1===e.Result)Api.showErrorByCode(e,TextUtils.i18n("COREWEBCLIENT/ERROR_SAVING_SETTINGS_FAILED"));else{var o=t.Parameters;this.applySavedValues(o),Screens.showReport(TextUtils.i18n("%MODULENAME%/REPORT_AUTORESPONDER_UPDATE_SUCCESS"))}},CAccountAutoresponderSettingsFormView.prototype.populate=function(){var e=AccountList.getEdited();e&&(null!==e.autoresponder()?(this.enable(e.autoresponder().enable),this.subject(e.autoresponder().subject),this.message(e.autoresponder().message)):Ajax.send("GetAutoresponder",{AccountID:e.id()},this.onGetAutoresponderResponse,this)),this.updateSavedState()},CAccountAutoresponderSettingsFormView.prototype.onGetAutoresponderResponse=function(e,t){if(e&&e.Result){var o=t.Parameters,s=Types.pInt(o.AccountID),r=AccountList.getAccount(s),n=new CAutoresponderModel;r&&(n.parse(s,e.Result),r.autoresponder(n),s===AccountList.editedId()&&this.populate())}},module.exports=new CAccountAutoresponderSettingsFormView;