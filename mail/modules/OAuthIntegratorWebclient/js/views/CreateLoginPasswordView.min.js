"use strict";function CCreateLoginPasswordView(){this.visible=ko.computed(function(){return Settings.OnlyPasswordForAccountCreate&&!Types.isNonEmptyString(App.firstAccountWithPassLogin())}),this.password=ko.observable(""),this.passwordFocus=ko.observable(!1),this.confirmPassword=ko.observable(""),this.confirmPasswordFocus=ko.observable(!1),this.login=ko.computed(function(){return App.getUserPublicId()},this)}var $=require("jquery"),ko=require("knockout"),TextUtils=require("%PathToCoreWebclientModule%/js/utils/Text.js"),Types=require("%PathToCoreWebclientModule%/js/utils/Types.js"),Screens=require("%PathToCoreWebclientModule%/js/Screens.js"),App=require("%PathToCoreWebclientModule%/js/App.js"),Settings=require("modules/%ModuleName%/js/Settings.js");CCreateLoginPasswordView.prototype.ViewTemplate="%ModuleName%_CreateLoginPasswordView",CCreateLoginPasswordView.prototype.setPassword=function(){var e=$.trim(this.login()),s=$.trim(this.password()),o=$.trim(this.confirmPassword());{if(""!==s)return s!==o?(Screens.showError(TextUtils.i18n("COREWEBCLIENT/ERROR_PASSWORDS_DO_NOT_MATCH")),void this.confirmPasswordFocus(!0)):void App.broadcastEvent(Settings.AuthModuleName+"::CreateUserAuthAccount",{Login:e,Password:s});this.passwordFocus(!0)}},module.exports=new CCreateLoginPasswordView;