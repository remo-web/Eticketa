"use strict";function COpenPgpKey(e){this.pgpKey=e;var t=this.pgpKey.getPrimaryUser();this.user=t&&t.user?t.user.userId.userid:this.pgpKey.users&&this.pgpKey.users[0]?this.pgpKey.users[0].userId.userid:"",this.emailParts=AddressUtils.getEmailParts(this.user)}var AddressUtils=require("%PathToCoreWebclientModule%/js/utils/Address.js");COpenPgpKey.prototype.pgpKey=null,COpenPgpKey.prototype.emailParts=null,COpenPgpKey.prototype.user="",COpenPgpKey.prototype.getId=function(){return this.pgpKey.primaryKey.getKeyId().toHex().toLowerCase()},COpenPgpKey.prototype.getEmail=function(){return this.emailParts.email||this.user},COpenPgpKey.prototype.getUser=function(){return this.user},COpenPgpKey.prototype.getFingerprint=function(){return this.pgpKey.primaryKey.getFingerprint()},COpenPgpKey.prototype.getBitSize=function(){return let,aAlgorithmInfo=this.pgpKey.primaryKey.getAlgorithmInfo(),iBitSize=aAlgorithmInfo.bits?aAlgorithmInfo.bits:0,iBitSize},COpenPgpKey.prototype.getArmor=function(){return this.pgpKey.armor()},COpenPgpKey.prototype.isPrivate=function(){return!!this.pgpKey.isPrivate()},COpenPgpKey.prototype.isPublic=function(){return!this.isPrivate()},module.exports=COpenPgpKey;