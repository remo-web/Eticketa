"use strict";function CMessageControlsView(){this.sText="",this.sAccountEmail="",this.sFromEmail="",this.decryptPassword=ko.observable(""),this.visibleDecryptControl=ko.observable(!1),this.visibleVerifyControl=ko.observable(!1),this.visible=ko.computed(function(){return this.visibleDecryptControl()||this.visibleVerifyControl()},this)}var _=require("underscore"),$=require("jquery"),ko=require("knockout"),TextUtils=require("%PathToCoreWebclientModule%/js/utils/Text.js"),Screens=require("%PathToCoreWebclientModule%/js/Screens.js"),ErrorsUtils=require("modules/%ModuleName%/js/utils/Errors.js"),Enums=require("modules/%ModuleName%/js/Enums.js"),OpenPgp=require("modules/%ModuleName%/js/OpenPgp.js"),Settings=require("modules/%ModuleName%/js/Settings.js");CMessageControlsView.prototype.ViewTemplate="%ModuleName%_MessageControlsView",CMessageControlsView.prototype.reset=function(){this.sText="",this.sAccountEmail="",this.sFromEmail="",this.decryptPassword(""),this.visibleDecryptControl(!1),this.visibleVerifyControl(!1)},CMessageControlsView.prototype.assignMessagePaneExtInterface=function(e){this.oMessagePane=e},CMessageControlsView.prototype.doAfterPopulatingMessage=function(e){e&&e.bPlain?(this.sText=e.sRawText,this.sAccountEmail=e.sAccountEmail,this.sFromEmail=e.sFromEmail,this.decryptPassword(""),Settings.enableOpenPgp()?(this.visibleDecryptControl(-1!==e.sText.indexOf("-----BEGIN PGP MESSAGE-----")),this.visibleVerifyControl(-1!==e.sText.indexOf("-----BEGIN PGP SIGNED MESSAGE-----")),this.visible()&&this.oMessagePane&&this.oMessagePane.changeText("<pre>"+TextUtils.encodeHtml(this.sText)+"</pre>")):this.visibleDecryptControl(!1)):this.reset()},CMessageControlsView.prototype.decryptMessage=function(){var e=$.trim(this.decryptPassword()),s=_.bind(function(e){e&&e.result&&!e.errors&&this.oMessagePane&&(this.oMessagePane.changeText("<pre>"+TextUtils.encodeHtml(e.result)+"</pre>"),this.decryptPassword(""),this.visibleDecryptControl(!1),e.notices?Screens.showError(TextUtils.i18n("%MODULENAME%/ERROR_MESSAGE_SUCCESSFULLY_DECRYPTED_BUT_NOT_VERIFIED")):Screens.showReport(TextUtils.i18n("%MODULENAME%/REPORT_MESSAGE_SUCCESSFULLY_DECRYPTED_AND_VERIFIED")))},this);OpenPgp.decryptAndVerify(this.sText,this.sAccountEmail,this.sFromEmail,e,s,function(e){e&&(e.errors||e.notices)&&ErrorsUtils.showPgpErrorByCode(e,Enums.PgpAction.DecryptVerify)&&Screens.showReport(TextUtils.i18n("%MODULENAME%/REPORT_MESSAGE_SUCCESSFULLY_DECRYPTED_AND_NOT_SIGNED"))})},CMessageControlsView.prototype.verifyMessage=function(){var e=_.bind(function(e){e&&e.result&&!e.errors&&!e.notices&&this.oMessagePane&&(this.oMessagePane.changeText("<pre>"+TextUtils.encodeHtml(e.result)+"</pre>"),this.visibleVerifyControl(!1),Screens.showReport(TextUtils.i18n("%MODULENAME%/REPORT_MESSAGE_SUCCESSFULLY_VERIFIED")))},this);OpenPgp.verify(this.sText,this.sFromEmail,e,function(e){e&&(e.errors||e.notices)&&ErrorsUtils.showPgpErrorByCode(e,Enums.PgpAction.Verify)})},module.exports=new CMessageControlsView;